---
- name: Ensure docker compose requirements are provided
  ansible.builtin.assert:
    that:
      - xray_domain | length > 0
    fail_msg: "xray_domain must be provided before rendering docker-compose.yml."

- name: Ensure compose directory exists
  ansible.builtin.file:
    path: "{{ compose_project_directory }}"
    state: directory
    mode: "0750"

- name: Check for existing docker compose project file
  ansible.builtin.stat:
    path: "{{ compose_project_directory }}/docker-compose.yml"
  register: docker_compose_file

- name: Stop existing docker compose project
  ansible.builtin.command: >-
    docker compose down{{ ' --remove-orphans' if docker_compose_remove_orphans | bool else '' }}
  args:
    chdir: "{{ compose_project_directory }}"
  when:
    - docker_compose_up | bool
    - docker_compose_down_before_up | bool
    - not ansible_check_mode
    - docker_compose_file.stat.exists
  environment:
    COMPOSE_FILE: "{{ compose_project_directory }}/docker-compose.yml"
  register: compose_down
  changed_when: >-
    compose_down.rc == 0 and (
      (compose_down.stdout | default('') | trim | length) > 0 or
      (compose_down.stderr | default('') | trim | length) > 0
    )

- name: Render Docker Compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ compose_project_directory }}/docker-compose.yml"
    mode: "0640"
  notify: Restart xray container

- name: Run docker compose up
  ansible.builtin.command: docker compose up -d
  args:
    chdir: "{{ compose_project_directory }}"
  when:
    - docker_compose_up | bool
    - not ansible_check_mode
  environment:
    COMPOSE_FILE: "{{ compose_project_directory }}/docker-compose.yml"
  register: compose_up
  changed_when: compose_up.rc == 0

- name: Validate Xray container stability
  when:
    - docker_compose_up | bool
    - not ansible_check_mode
  block:
    - name: Validate Xray container stability attempt {{ item }}
      ansible.builtin.shell: |
        sleep {{ xray_stability_check_delay }}
        docker inspect -f '{{ '{{' }} .State.Status {{ '}}' }}' {{ xray_container_name }}
      args:
        executable: /bin/bash
      register: xray_stability_check
      loop: "{{ range(1, xray_stability_check_count + 1) | list }}"
      loop_control:
        label: "attempt {{ item }}"
      changed_when: false
      failed_when:
        - xray_stability_check.rc != 0
        - xray_stability_check.stdout is not defined or (xray_stability_check.stdout | trim) == ''
        - (xray_stability_check.stdout | trim | lower) != 'running'
  rescue:
    - name: Gather Xray container status
      ansible.builtin.command: docker inspect -f '{{ '{{' }} .State.Status {{ '}}' }}' {{ xray_container_name }}
      register: xray_container_status
      failed_when: false
      changed_when: false

    - name: Gather Xray container health status
      ansible.builtin.command: docker inspect -f '{{ '{{' }} .State.Health.Status {{ '}}' }}' {{ xray_container_name }}
      register: xray_container_health
      failed_when: false
      changed_when: false

    - name: Gather Xray container restart count
      ansible.builtin.command: docker inspect -f '{{ '{{' }} .State.RestartCount {{ '}}' }}' {{ xray_container_name }}
      register: xray_container_restart_count
      failed_when: false
      changed_when: false

    - name: Gather recent Xray container logs
      ansible.builtin.command: docker logs --tail {{ xray_failure_log_lines }} {{ xray_container_name }}
      register: xray_container_logs
      failed_when: false
      changed_when: false

    - name: Display Xray container status details
      ansible.builtin.debug:
        msg:
          - "Xray container status: {{ (xray_container_status.stdout | default(xray_container_status.stderr | default('unknown', true), true)) | trim }}"
          - "Xray container health status: {{ (xray_container_health.stdout | default(xray_container_health.stderr | default('unavailable', true), true)) | trim }}"
          - "Xray container restart count: {{ (xray_container_restart_count.stdout | default(xray_container_restart_count.stderr | default('unknown', true), true)) | trim }}"

    - name: Display Xray container logs
      ansible.builtin.debug:
        msg: |-
          Recent Xray container logs (last {{ xray_failure_log_lines }} lines):
          {{ (xray_container_logs.stdout_lines | default([xray_container_logs.stdout | default('No logs available', true)])) | join('\n') }}

    - name: Display Xray container log errors
      ansible.builtin.debug:
        msg: |-
          Recent Xray container log errors:
          {{ (xray_container_logs.stderr_lines | default([xray_container_logs.stderr | default('', true)])) | reject('equalto', '') | list | join('\n') }}
      when: (xray_container_logs.stderr is defined and (xray_container_logs.stderr | length > 0)) or (xray_container_logs.stderr_lines is defined and (xray_container_logs.stderr_lines | length > 0))

    - name: Fail because the Xray container is not running
      ansible.builtin.fail:
        msg: >-
          Xray container failed to reach the running state after {{ xray_stability_check_count }} attempts. Review the status and logs above for more details.
